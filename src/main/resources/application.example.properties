# 数据源配置
quarkus.datasource.db-kind=
quarkus.datasource.username=
quarkus.datasource.password=
quarkus.datasource.jdbc.url=

# Hibernate ORM 配置
# 可选值：
# none: 不做任何操作
# create: 每次启动都删除已存在的表，重新创建
# drop-and-create: 启动时删除并创建表，关闭时删除表
# update: 如果表不存在则创建，如果表结构有变化则更新（推荐用于开发环境）
# validate: 只验证表结构，不做修改
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
# 禁用SQL脚本，使用实体类生成表
quarkus.hibernate-orm.sql-load-script=no-file
# 自动生成表的配置
quarkus.hibernate-orm.database.generation.create-schemas=true
quarkus.hibernate-orm.database.default-schema=public

# 日志配置
quarkus.log.level=INFO
quarkus.log.category."ltd.weihan.paytracker".level=DEBUG
quarkus.log.category."org.hibernate.SQL".level=DEBUG
# 修复TRACE日志级别警告
quarkus.log.category."org.hibernate.type.descriptor.sql".level=DEBUG
quarkus.log.category."org.hibernate.type.descriptor.sql".min-level=TRACE

# HTTP 配置
quarkus.http.port=8080
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# 文件上传配置
quarkus.http.body.uploads-directory=uploads
quarkus.http.body.handle-file-uploads=true
quarkus.http.body.delete-uploaded-files-on-end=false
quarkus.http.limits.max-body-size=10M

# OpenAPI 配置
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
